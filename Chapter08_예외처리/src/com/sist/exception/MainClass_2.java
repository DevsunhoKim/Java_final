package com.sist.exception;
/* 예외 처리의 기본 267p
 * 
 *   가장 많이 사용된다 => 예외복구
 *   try~catch~finally
 *   1) 형식
 *      try
 *      {
 *        에러없이 실행이 가능한 소스
 *        // main ==> 정상 수행하는 문장 => 개발자 실수, 사용자 입력 
 *      }catch(Exception e)
 *      {
 *        예외 복구 ==> 다시 입력 요청 => 다음문장으로 이동
 *        ==> catch는 예상되는 예외를 따라 처리 => 여러개 사용이 가능 
 *      }
 *    
 *    2) 동작 흐름
 *    
 *       문장 1
 *       문장 2
 *       try ==> 전체 / 부분 사용가능 => 에러가 발생할 수 있는 부분
 *       {
 *         문장 3
 *         문장 4
 *         문장 5
 *       }catch(Exception e)
 *       {
 *         문장 6
 *       }
 *       문장 7
 *       문장 8
 *       
 *       1 => 2 => 3 => 4 => 5 => 6 => 7 => 8 (에러가 없는경우)
 *    -------------------------------------------------------   
 *       문장 1
 *       문장 2
 *       try ==> 전체 / 부분 사용가능 => 에러가 발생할 수 있는 부분
 *       {
 *         문장 3
 *         문장 4 => int a=10/0; => 에러발생 => catch로 이동
 *         문장 5
 *       }catch(Exception e)
 *       {
 *         문장 6 ==> 복구 => 문장 3으로 이동
 *       }
 *       문장 7
 *       문장 8
 * 
 *       1 => 2 => 3 => 6 => 7 => 8
 *       -------------------------------------------------------
 *         문장 1
 *         문장 2 ==> 에러 발생
 *       try 
 *       {
 *         문장 3
 *         문장 4 
 *         문장 5
 *       }catch(Exception e)
 *       {
 *         문장 6
 *       }
 *       문장 7
 *       문장 8
 *       
 *       1 => 종료 ==> 비정상 종료
 *       ---------------------------------------------------------
 *       
 *       try ==> 정상으로 수행하는 문장
 *             => 개발자 실수 , 사용자 입력값 , 예외 발생
 *                                     -------
 *                                        |종료 => 종료 방지를 위해
 *      *** 수행문장에 이상이 없는 경우 (에러가 없는 경우)
 *      			정상 수행문장
 *      *** 수행문장에 이상이 있는 경우 (에러가 있는 경우)
 *                 -----------  무시 -------catch 이동
 */
public class MainClass_2 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		System.out.println("문장 1");
		System.out.println("문장 2");
		try
		{
			System.out.println("문장 3");
			System.out.println("문장 4");
			System.out.println("문장 5");
		}catch (Exception e)
		{
			System.out.println("문장 6");
		}
		System.out.println("문장 7");
		System.out.println("문장 8 ==> 정상 종료");
	}

}
